# Template that does all the boiler plate needed to build and execute tests on macOS bots

parameters:
- name: disableCodeQL
  type: boolean
  default: true
- name: keyringPass
  type: string

steps:
- template: agent-cleanser/v1.yml@yaml-templates # Uninstalls mono, Xamarin.Mac (if installed) plus cleanses the Provisionator Xcode cache and kills processes at the end
  parameters:
    CleanseProcesses: true

- bash: $(Build.SourcesDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/automation/scripts/disable-codeql-arm64.sh
  displayName: 'Disable CodeQL on arm64'
  name: disableCodeQLOnArm64
  condition: and(succeeded(), eq('${{ parameters.disableCodeQL }}', 'true'))

- bash: $(Build.SourcesDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/automation/scripts/bash/fix-github-ssh-key.sh
  displayName: 'Fix GitHub SSH host key'

- pwsh: '& "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY/$Env:BUILD_REPOSITORY_TITLE/tools/devops/automation/scripts/show_bot_info.ps1"'
  displayName: 'Show Bot Info'

- bash: '$SYSTEM_DEFAULTWORKINGDIRECTORY/$BUILD_REPOSITORY_TITLE/tools/devops/automation/scripts/bash/clean-bot.sh'
  displayName: 'Clean bot'
  continueOnError: true
  timeoutInMinutes: 60

- bash: $(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/automation/scripts/bash/remove-ui-prompt.sh
  env:
    OSX_KEYCHAIN_PASS: ${{ parameters.keyringPass }}
  displayName: 'Remove security UI-prompt (http://stackoverflow.com/a/40039594/183422)'
  continueOnError: true

# was the current xcode deleted (has happened due to a bug in the clean step)? then set the default so 
# that we can call make and generated the provisionator config files.
- bash: $(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/automation/scripts/bash/ensure-xcode-select.sh
  displayName: 'Ensure Xcode is selected.'

- pwsh: |
    # some steps expect this to be set to be able to get the correct nuget name
    Write-Host "##vso[task.setvariable variable=BRANCH_NAME]$Env:BRANCH_NAME"
  displayName: 'Set Jenkins variables'
  env:
    BRANCH_NAME: $[ replace(variables['Build.SourceBranch'], 'refs/heads/', '') ]

# Write MSBuild logs into the jenkins-results directory, so they're uploaded after test runs.
- pwsh: Write-Host "##vso[task.setvariable variable=MSBUILDDEBUGPATH]$Env:SYSTEM_DEFAULTWORKINGDIRECTORY/$Env:BUILD_REPOSITORY_TITLE/jenkins-results/MSBuildCrashLogs"
  displayName: 'Set MSBuild crash log directory'
