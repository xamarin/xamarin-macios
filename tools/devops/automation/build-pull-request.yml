# YAML pipeline build definition
# https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=13947&view=Tab_Tasks
#
# YAML build pipeline based on the Jenkins multi-stage (main branch) build workflow
# https://jenkins.internalx.com/view/Xamarin.MaciOS/job/macios/job/main/
# https://jenkins.internalx.com/view/Xamarin.MaciOS/job/macios/configure

parameters:

- name: provisionatorChannel
  displayName: Provisionator channel to use 
  type: string
  default: 'latest'

- name: macOSName # comes from the build agent demand named macOS.Name
  displayName: Name of the version of macOS to use
  type: string
  default: 'Sequoia'

- name: runGovernanceTests
  displayName: Run Governance Checks
  type: boolean
  default: true

- name: forceInsertion
  displayName: Force Insertion 
  type: boolean
  default: false 

- name: testConfigurations
  displayName: Test configurations to run
  type: object
  default: []

- name: deviceTestsConfigurations
  displayName: Device test configurations to run
  type: object
  default: [
    {
      testPrefix: 'iOS64',
      stageName: 'ios64b_device',
      displayName: 'iOS64 Device Tests',
      testPool: 'VSEng-Xamarin-Mac-Devices',
      testsLabels: '--label=run-ios-tests,run-non-monotouch-tests,run-monotouch-tests,run-mscorlib-tests',
      statusContext: 'VSTS: device tests iOS',
      makeTarget: 'vsts-device-tests',
      extraBotDemands: [
        'ios',
      ]
    },
    {
      testPrefix: 'tvos',
      stageName: 'tvos_device',
      displayName: 'tvOS Device Tests',
      testPool: 'VSEng-Xamarin-Mac-Devices',
      testsLabels: '--label=run-tvos-tests,run-non-monotouch-tests,run-monotouch-tests,run-mscorlib-tests',
      statusContext: 'VSTS: device tests tvOS',
      makeTarget: 'vsts-device-tests',
      extraBotDemands: [
        'tvos',
      ]
    }]

- name: macTestsConfigurations
  displayName: macOS test configurations to run
  type: object
  default: [
    {
      stageName: 'mac_12_m1',
      displayName: 'M1 - Mac Ventura (12)',
      macPool: 'VSEng-VSMac-Xamarin-Shared',
      useImage: false,
      statusContext: 'M1 - Mac Monterey (12)',
      demands: [
        "Agent.OS -equals Darwin",
        "macOS.Name -equals Monterey",
        "macOS.Architecture -equals arm64",
        "Agent.HasDevices -equals False",
        "Agent.IsPaired -equals False"
      ]
    },
    {
      stageName: 'mac_13_m1',
      displayName: 'M1 - Mac Ventura (13)',
      macPool: 'VSEng-VSMac-Xamarin-Shared',
      useImage: false,
      statusContext: 'M1 - Mac Ventura (13)',
      demands: [
        "Agent.OS -equals Darwin",
        "macOS.Name -equals Ventura",
        "macOS.Architecture -equals arm64",
        "Agent.HasDevices -equals False",
        "Agent.IsPaired -equals False"
      ]
    },
    {
      stageName: 'mac_14_x64',
      displayName: 'X64 - Mac Sonoma (14)',
      macPool: 'VSEng-Xamarin-RedmondMacBuildPool-iOS-Untrusted',
      useImage: false,
      statusContext: 'X64 - Mac Sonoma (14)',
      demands: [
        "Agent.OS -equals Darwin",
        "macOS.Name -equals Sonoma",
        "macOS.Architecture -equals x64",
        "Agent.HasDevices -equals False",
        "Agent.IsPaired -equals False"
      ]
    }]

resources:
  repositories:
  - repository: self
    checkoutOptions:
      submodules: true

  - repository: yaml-templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/main
    endpoint: xamarin

  - repository: macios-adr
    type: git
    name: macios-adr
    ref: refs/heads/main

  - repository: CustomPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate

variables:
- template: templates/variables/common.yml
- template: templates/variables/api-scan.yml
- name: Packaging.EnableSBOMSigning
  value: false


# only allow triggers from specific branches
trigger:
  branches:
    include:
    - refs/heads/dev/*
    - refs/heads/darc-*
    - refs/heads/backport-pr-*

pr:
  autoCancel: true
  branches:
    include:
    - '*'  # yes, you do need the quote, * has meaning in yamls
  paths:
    exclude:
    - .github
    - docs
    - CODEOWNERS
    - ISSUE_TEMPLATE.md
    - LICENSE
    - NOTICE.txt
    - SECURITY.MD
    - README.md
    - src/README.md
    - tools/mtouch/README.md
    - msbuild/Xamarin.Localization.MSBuild/README.md

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@CustomPipelineTemplates
  parameters:
    pool:  # default pool to be used forvalidation jobs
      name: AzurePipelines-EO
      image: 1ESPT-Windows2022
      os: windows
    sdl:
      baseline:
        baselineFile: '$(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/governance/baselines.gdnbaselines'
      suppression:
        suppressionFile: '$(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/governance/suppress.gdnsuppress'
      sourceAnalysisPool:
        name: AzurePipelines-EO
        image: 1ESPT-Windows2022
        os: windows
      tsa:
        configFile: '$(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/governance/tsa_config.gdntsa'
      sbom:
        enabled: false  # we run our on sbom generation
      credscan:
        suppressionsFile: '$(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/governance/CredScanSuppressions.json'
        debugMode: true
        verboseOutput: true
      policheck:
        exclusionsFile: '$(System.DefaultWorkingDirectory)/$(BUILD_REPOSITORY_TITLE)/tools/devops/governance/PoliCheckExclusions.xml'
      sourceRepositoriesToScan:
        runInSingleJob: true # run both maccore and macios in the same job
        include:
        - repository: self
          path: xamarin-macios        
        exclude:
        - repository: yaml-templates
        - repository: macios-adr # macios-adr has it's own build pipeline and should not be included in the source analysis
    stages:
    - template: templates/main-stage.yml
      parameters:
        xcodeChannel: Stable
        macOSName: ${{ parameters.macOSName }}
        isPR: true
        provisionatorChannel: ${{ parameters.provisionatorChannel }}
        pool: $(PRBuildPool)
        runGovernanceTests: ${{ parameters.runGovernanceTests }}
        forceInsertion: ${{ parameters.forceInsertion }}
        pushNugets: false
        pushNugetsToMaestro: false
        ${{ if ne(length(parameters.testConfigurations), 0)}}:
          testConfigurations: ${{ parameters.testConfigurations }}
        deviceTestsConfigurations: ${{ parameters.deviceTestsConfigurations }}
        macTestsConfigurations: ${{ parameters.macTestsConfigurations }}
